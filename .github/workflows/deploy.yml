name: Deploy

on:
  push:
    branches:
      - master

# To enable concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  GO_VERSION: 1.23.2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Add remote machine to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create key file
        run: |
          mkdir -p certs -m 0700
          echo "${{ secrets.EC2_SSH_KEY }}" > certs/ec2_ssh_key
          chmod 600 certs/ec2_ssh_key

      - name: Test ssh connection
        run: ssh -i certs/ec2_ssh_key -T ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}

      - name: Install dependencies
        run: go mod tidy

      - name: Create .env file
        uses: sibiraj-s/action-toenv@v1
        with:
          envpath: ./.deploy/.env
          env: |
            NODE_ENV=production
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            SERVER_PORT=${{ vars.SERVER_PORT }}
            INVITE_SECRET=${{ secrets.INVITE_SECRET }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            CLIENT_URL=${{ vars.CLIENT_URL }}
            PROJECT_DEFAULT_DOMAIN=${{ vars.PROJECT_DEFAULT_DOMAIN }}
            OAUTH_SERVER_URL=${{ vars.OAUTH_SERVER_URL }}
            OAUTH_SERVER_AUTH_TOKEN=${{ secrets.OAUTH_SERVER_AUTH_TOKEN }}
            POSTMAN_SERVER_URL=${{ vars.POSTMAN_SERVER_URL }}
            POSTMAN_SERVER_AUTH_TOKEN=${{ secrets.POSTMAN_SERVER_AUTH_TOKEN }}
            GITHUB_OAUTH_CLIENT_ID=${{ secrets.GITHUBAPP_OAUTH_CLIENT_ID }}
            GITHUB_OAUTH_CLIENT_SECRET=${{ secrets.GITHUBAPP_OAUTH_CLIENT_SECRET }}
            GITHUB_HMAC_SECRET_KEY=${{ secrets.GITHUBAPP_HMAC_SECRET_KEY }}
            GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
            GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
            GOOGLE_HMAC_SECRET_KEY=${{ secrets.GOOGLE_HMAC_SECRET_KEY }}

      - name: Build, deploy and restart server
        env:
          ENV: master
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_CERT: certs/ec2_ssh_key
        run: make deploy

      - name: After deploy
        if: always()
        run: |
          rm -rf certs
          rm -rf ./.deploy
