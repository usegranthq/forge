name: Deploy

on:
  push:
    branches:
      - master

# To enable concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1

      - name: Add remote machine to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Create .pem file
        run: |
          mkdir -p certs -m 0700
          echo "${{ secrets.EC2_SSH_KEY }}" > certs/ec2_ssh_key
          chmod 600 certs/ec2_ssh_key

      - name: Test ssh connection
        run: ssh -i certs/ec2_ssh_key -T ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}

      - name: Create .env file
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            fs.writeFileSync('.env', `
              DATABASE_URL=${{ secrets.DATABASE_URL }}
              DB_HOST=${{ secrets.DB_HOST }}
              DB_PORT=${{ secrets.DB_PORT }}
              DB_NAME=${{ secrets.DB_NAME }}
              DB_USER=${{ secrets.DB_USER }}
              DB_PASSWORD=${{ secrets.DB_PASSWORD }}
              SERVER_PORT=${{ secrets.SERVER_PORT }}
              JWT_SECRET=${{ secrets.JWT_SECRET }}
              CLIENT_URL=${{ secrets.CLIENT_URL }}
              PROJECT_URL_HASH_SALT=${{ secrets.PROJECT_URL_HASH_SALT }}
              PROJECT_OIDC_DOMAIN=${{ secrets.PROJECT_OIDC_DOMAIN }}
              OAUTH_SERVER_URL=${{ secrets.OAUTH_SERVER_URL }}
              OAUTH_SERVER_AUTH_TOKEN=${{ secrets.OAUTH_SERVER_AUTH_TOKEN }}
              POSTMAN_SERVER_URL=${{ secrets.POSTMAN_SERVER_URL }}
              POSTMAN_SERVER_AUTH_TOKEN=${{ secrets.POSTMAN_SERVER_AUTH_TOKEN }}
              GITHUB_OAUTH_CLIENT_ID=${{ secrets.GITHUB_OAUTH_CLIENT_ID }}
              GITHUB_OAUTH_CLIENT_SECRET=${{ secrets.GITHUB_OAUTH_CLIENT_SECRET }}
              GITHUB_HMAC_SECRET_KEY=${{ secrets.GITHUB_HMAC_SECRET_KEY }}
              GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
              GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
              GOOGLE_HMAC_SECRET_KEY=${{ secrets.GOOGLE_HMAC_SECRET_KEY }}
            `)

      - name: Copy .env to remote machine
        run: scp -i certs/ec2_ssh_key .env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/apps/.env

      # - name: Build, deploy and restart server
      #   env:
      #     ENV: master
      #     EC2_USER: ${{ secrets.EC2_USER }}
      #     EC2_HOST: ${{ secrets.EC2_HOST }}
      #     EC2_CERT: certs/ec2_ssh_key.pem
      #   run: make deploy

      - name: Delete .pem file
        if: always()
        run: |
          rm -rf certs
          rm -f .env
