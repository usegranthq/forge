name: useGrant_backend

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - 0authpg-data:/var/lib/postgresql/data
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - intranet

  # hydra-migrate:
  #   depends_on:
  #     - postgres
  #   image: oryd/hydra:v2.2.0
  #   environment:
  #     - DSN=${HYDRA_DSN}
  #   command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
  #   volumes:
  #     - type: volume
  #       source: 0authpg-data
  #       target: /var/lib/postgresql/data
  #       read_only: false
  #     - type: bind
  #       source: ./config
  #       target: /etc/config/hydra
  #   restart: on-failure
  #   networks:
  #     - intranet

  hydra:
    depends_on:
      - hydra-migrate
    image: oryd/hydra:v2.2.0
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: volume
        source: 0authpg-data
        target: /var/lib/postgresql/data
        read_only: false
      - type: bind
        source: ./config
        target: /etc/config/hydra
    environment:
      - DSN=${HYDRA_DSN}
    restart: unless-stopped
    networks:
      - intranet

  backend:
    depends_on:
      - postgres
    build:
      context: .
      target: development
    volumes:
      - ./:/app
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    env_file: .env
    restart: always
    networks:
      - intranet

volumes:
  0authpg-data:

networks:
  intranet:
